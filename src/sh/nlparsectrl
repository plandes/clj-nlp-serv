#!/bin/bash

## service name
SERV_NAME=${SERV_NAME:-nlparse}

## env config
APP_NAME=${APP_NAME:-${SERV_NAME}ctrl}
USAGE="usage: ${APP_NAME} <status|start|stop> [-d]"

INST_DIR=${INST_DIR:-${HOME}/opt/app}
PORT=${PORT:-9100}
NLPSERV_HOME=${INST_DIR}/${SERV_NAME}
START_BIN=${NLPSERV_HOME}/bin/${SERV_NAME}
LOGDIR=${NLPSERV_HOME}/log
LOG=$LOGDIR/${SERV_NAME}.log

## app config
JAVA_OPTS="-Xms2g -Xmx10g -XX:+UseConcMarkSweepGC -Dzensols.model=${INST_DIR}/model"
export JAVA_OPTS

if [ -z "$COMPONENTS" -a "$COMPONENTS" != "-" ] ; then
    COMPONENTS='tokenize,sentence,stopword,part-of-speech,morphology,named-entity-recognizer,parse-tree,coreference,semantic-role-labeler'
fi

## funcs
srvprocpid() {
    PID=$(ps auwgxx | grep ${SERV_NAME} | grep -v grep | grep -v ${APP_NAME} | awk '{print $2}')
}

startsrvproc() {
    FG=$1
    srvprocpid
    if [ -z "$PID" ] ; then
	ARGS="-p ${PORT}"
	if [ "$COMPONENTS" != "-" ] ; then
	    ARGS="${ARGS} -c ${COMPONENTS}"
	fi
	echo "components: $COMPONENTS"
	echo "port: $PORT"
	if [ $FG ] ; then
	    echo "starting ${SERV_NAME} in foreground..."
	    echo /bin/bash ${START_BIN} service ${ARGS}
	    exit 0
	else
	    echo "starting ${SERV_NAME} in background..."
	    mkdir -p $LOGDIR
	    nohup /bin/bash ${START_BIN} service ${ARGS} > ${LOG} 2>&1 &
	fi
    else
	echo "already running at $PID"
    fi
}

stopsrvproc() {
    srvprocpid
    if [ ! -z "$PID" ] ; then
	echo "killing $PID..."
	kill $PID
    else
	echo "no service running"
    fi
}

status() {
    srvprocpid
    if [ ! -z "$PID" ] ; then
	echo "${SERV_NAME} running at $PID..."
    else
	echo "no service running"
    fi
}

case "$1" in
    start)
	if [ "$2" != "-d" ] ; then
	    startsrvproc 1
	else
	    startsrvproc
	fi
	;;

    stop)
	stopsrvproc
	;;

    restart)
	stopsrvproc
	sleep 1
	startsrvproc
	;;

    status)
	status
	;;

    info)
	echo "home: $NLPSERV_HOME"
	echo "start-script: $START_BIN"
	echo "log: $LOG"
	echo "java-ops: ${JAVA_OPTS}"
	;;

    *)
	echo $USAGE
esac
